#
# Possible Error levels:
#    DEBUG:     Detailed debug information.
#    INFO:      Interesting events. Examples: User logs in, SQL logs.
#    NOTICE:    Normal but significant events.
#    WARNING:   Exceptional occurrences that are not errors.
#               Examples: deprecated APIs, poor use of an API, undesirable things that are not necessarily wrong.
#    ERROR:     Runtime errors that do not require immediate action but should typically be logged and monitored.
#    CRITICAL:  Critical conditions. Example: Application component unavailable, unexpected exception.
#    ALERT:     Action must be taken immediately. Example: Entire website down, database unavailable, etc.
#               This should trigger the SMS alerts and wake you up.
#    EMERGENCY: Emergency: system is unusable.
#
# The fingers crossed type allows us to use a nested handler which logs everything but only
# passes them to a second handler if a minimum error level was reached.
#
# Rotate File can be used to create separate files for every day to prevent too large log files.
#
# FirePhp and ChromePhp allow us to log to the firefox and chrome browser
#

monolog:
  channels: [search, download, soft]
  handlers:
    ##-------------------------------------------------------------------------------------------
    ## Log all real error
    ##
    main:
      type: fingers_crossed
      action_level: error
      handler: mainHandler
      excluded_404s: true
      excluded_http_codes: [400, 401, 402, 403, 404, 405, 406, 429]
      buffer_size: 50 # How many messages should be saved? Prevent memory leaks
      channels: [ "!soft" ]
      formatter: monolog.formatter.catrobat_custom_formatter
    mainHandler:
      type: rotating_file
      path: "%kernel.logs_dir%/%kernel.environment%/%kernel.environment%.log"
      level: warning
      max_files: 1

    ##-------------------------------------------------------------------------------------------
    ## Still log everything just to be sure.... Unfortunately there is no only_http_codes
    ##
    soft:
      type: fingers_crossed
      action_level: error
      handler: softHandler
    softHandler:
      type: rotating_file
      path: "%kernel.logs_dir%/%kernel.environment%/soft/soft.log"
      max_files: 1
      level: warning
      formatter: monolog.formatter.catrobat_custom_formatter

    ##-------------------------------------------------------------------------------------------
    ## Debug Logging
    ##
    search:
      type: rotating_file
      path: "%kernel.logs_dir%/%kernel.environment%/search/search.log"
      level: debug
      max_files: 1
      channels: [ search ]
      formatter: monolog.formatter.catrobat_custom_formatter

    download:
      type: rotating_file
      path: "%kernel.logs_dir%/%kernel.environment%/download/download.log"
      level: debug
      max_files: 1
      channels: [ download ]
      formatter: monolog.formatter.catrobat_custom_formatter

    # ---------------------------------------------------------------------------------------------
    # Console Logging
    #
    console:
      type: console
      process_psr_3_messages: false
      channels: [ "!event", "!doctrine", "!console" ]

    # ---------------------------------------------------------------------------------------------
    # Deprecation Logging
    #
    deprecation_filter:
      type: filter
      handler: deprecation_stream
      max_level: info
      channels: ["php"]

    deprecation_stream:
      type: stream
      path: "%kernel.logs_dir%/%kernel.environment%/%kernel.environment%.deprecations.log"

    # ---------------------------------------------------------------------------------------------
    # logging in your browser
    # you may have to allow bigger header sizes in your Web server configuration
    firephp:
      type: firephp
      level: warning
    chromephp:
      type: chromephp
      level: warning
