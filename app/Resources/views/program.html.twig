{% extends ':Default:base.html.twig' %}

{% block head %}
  <link rel="stylesheet" href="{{ asset('css/'~theme()~'/program.css') }}" media="screen"/>
  <link href="https://share.catrob.at/html5/player/pocketCodePlayer.css" rel="stylesheet" />
  <link rel="stylesheet" href="{{ asset('css/plugins/jquery.contextMenu.min.css') }}" />
  <link rel="stylesheet" href="{{ asset('css/plugins/sweetalert.css') }}" />
  <link rel="stylesheet" href="{{ asset('css/plugins/vis.min.css') }}" />
  <link rel="stylesheet" href="{{ asset('css/pocketcode/remixgraph.css') }}" />
  <link rel="stylesheet" href="{{ asset('css/plugins/font-awesome.min.css') }}" />
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.min.css" />

  <script src="https://share.catrob.at/html5/player/pocketCodePlayer.js"></script>
  <script src=" {{  asset( getJavascriptPath('loginscript.js') )}}"></script>
  <script src="{{ asset('js/plugins/jquery.contextMenu.min.js') }}"></script>
  <script src="{{ asset('js/plugins/jquery.ui.position.min.js') }}"></script>
  <script src="{{ asset('js/plugins/sweetalert.min.js') }}"></script>
  <script src="{{ asset('js/plugins/animatedModal.min.js') }}"></script>
  <script src="{{ asset('js/plugins/vis.min.js') }}"></script>
  <script src="{{ asset('js/custom/remixgraph.js') }}"></script>

  <meta property="og:image" content="{{ asset(program_details.screenshotBig, absolute=true) }}" />
  <meta property="og:type" content="website" />
  <meta property="og:image:secure_url" content="{{ asset(program_details.screenshotBig, absolute=true) }}" />
  <meta property="og:title" content="{{ program.name|escape('html_attr') }}" />
  {% if program.description is empty %}
    <meta property="og:description" content="{{ "programs.checkout_this_program"|trans({}, "catroweb") }}" />
  {% else %}
    <meta property="og:description" content="{{ program.description|escape('html_attr') }}" />
  {% endif %}
  <meta property="og:url" content="{{ url('program', {id: program.id}) }}" />
{% endblock %}

{% block body %}

  <div id="program-top" class="h1">
    <div id="program-name">{{ program.name }}</div>
    <div id="program-user">
      <span class="img-author"></span>
      <a href="{{ url('profile', { id : program.user.id }) }}">{{ program.user }}</a>
    </div>
    <div class="clear"></div>
  </div>

  <div id="program-middle">
      <div id="image" class="image-container">
          <img id="img-screenshot" width="300" height="300" id="screenshot" src="{{ asset(program_details.screenshotBig) }}">
{#
          <button class="pc-startButton" onclick="javascript: launchProject({{ program.id }});"> <svg preserveAspectRatio="xMidYMin meet" viewBox="0,0,64,64"> <path class="pc-svgPlayerIconBorder" d="M32,1C14.88,1,1,14.88,1,31.999C1,49.12,14.88,63,32,63s31-13.88,31-31.001C63,14.88,49.12,1,32,1z M32,56.979c-13.796,0-24.98-11.184-24.98-24.98c0-13.795,11.185-24.98,24.98-24.98s24.979,11.186,24.979,24.98 C56.979,45.796,45.796,56.979,32,56.979z"></path> <polygon class="pc-svgPlayerIconSymbol" points="34.662,32 22.934,44.066 27.438,48.55 43.629,32 27.438,15.45 22.934,19.934"></polygon> </svg> </button>
#}
        </a>
        {% if not isWebview() %}
          {% include ':social:social_share_desktop.html.twig' %}
        {% endif %}
      </div>

    <div id="info">
      <h2>{{ "description"|trans({}, "catroweb") }}</h2>

      <div id="description">
        {% if program.description %}
          {{ program.description|nl2br }}
        {% else %}
          {{ "noDescription"|trans({}, "catroweb") }}
        {% endif %}
      </div>

      {% if  program.tags|length > 0  or program.extensions|length > 0 %}
        <div id="tag-extension-container">

          {% if program.extensions|length > 0 %}
            <div id="extension-container">
              <div class="tags-extensions-text">{{ ("extenstion-text")|trans({}, "catroweb") }}:</div>
                <div class="tagext">
                  {% for extension in program.extensions %}
                    <a href="{{ url('extension_search', { q : extension.name }) }}">
                      <button id={{ extension.name }} class="btn-tags-extensions"> {{ extension.name }}</button>
                    </a>
                  {% endfor %}
              </div>
            </div>
          {% endif %}

          {% if  program.tags|length > 0 %}
            <div id="tag-container">
              <div class="tags-extensions-text">{{ ("tag-text")|trans({}, "catroweb") }}:</div>
              <div class='tagext'>
                {% for tag in program.tags %}
                  <a href="{{ url('tag_search', { q : tag.id }) }}">
                    <button id={{ tag.en }} class="btn-tags-extensions"> {{ ("tags.constant.tag"~tag.id)|trans({}, "catroweb") }}</button>
                  </a>
                {% endfor %}
              </div>
            </div>
          {% endif %}

        </div>
      {% endif %}

      <div class="download-container">
        <a id="url-download" href="{% if (checkCatrobatLanguage(program_details.languageVersion)) %}{{ program_details.downloadUrl }}{% else %}javascript:program.showUpdateAppPopup();{% endif %}">
          <button id="download" class="btn btn-primary download-button">
            <table>
              <tr>
                <td><img src="{{ asset('images/symbols/download.svg') }}" > </td>
                <td>{{ "download"|trans({}, "catroweb") }}</td>
              </tr>
            </table>
          </button>
        </a>

        <button id="apk-generate" class="btn btn-apk download-button">
          <table>
            <tr>
              <td><img src="{{ asset('images/symbols/apk_download.svg') }}" > </td>
              <td>{{ "apk.prepare"|trans({}, "catroweb") }}</td>
            </tr>
          </table>
        </button>

        <div id="apk-pending" class="btn-apk pending-container">
          <button  class="btn download-button download-pending">
            <table>
              <tr>
                <td><img src="{{ asset('images/symbols/apk_download.svg') }}" > </td>
                <td>{{ "apk.preparing"|trans({}, "catroweb") }}</td>
              </tr>
            </table>
          </button>
          <img class="pending-icon" src="{{ asset('images/symbols/loading.gif') }}" >
        </div>

        <button id="apk-download" class="btn btn-apk download-button">
          <table>
            <tr>
              <td><i class="fa fa-sitemap" aria-hidden="true"></i></td>
              <td>{{ "apk.download"|trans({}, "catroweb") }}</td>
            </tr>
          </table>
        </button>
      </div>

      {% if not program.gamejam or not program.acceptedforgamejam %}
        {% if jam %}
          <div id="gamejam-div">
          {% if app.user %}
            <a href="{{ url('gamejam_web_submit', { "id": program.id }) }}" title="{{ jam.name }}">
          {% else %}
            <a href="{{ url('login') }}" title="{{ jam.name }}">
          {% endif %}
              <button id="gamejam-submittion" class="btn btn-jam download-button">
                <table>
                  <tr>
                    <td><img src="{{ asset( jam.logo_url ) }}" > </td>
                    <td>{{ "gamejam.submit"|trans({ '%gamejamname%' : jam.name}, "catroweb") }}</td>
                  </tr>
                </table>
              </button>
            </a>
          </div>
          <div id="gamejam-whats">
            <a href="{{ jam.gamejam_url }}">{{ "gamejam.whats"|trans({ '%gamejamname%' : jam.name}, "catroweb") }}</a>
          </div>
        {% endif %}
      {% endif %}
      <br>

      <table id="copy-link">
        <tr>
          <td id="copy-link-image"></td>
          <td>
            <span>Link</span>
          </td>
        </tr>
        <tr>
          <td colspan="2">
              <input name="copy-link" id="url-link" value="{{ url('program', { id : program.id }) }}">
          </td>
        </tr>
      </table>

      <p>
      <span id="report">{{ "programs.reportAsInappropriate"|trans({}, 'catroweb') }}</span>
      <br>
      {{ "programs.languageVersion"|trans({ "%languageVersion%" : program_details.languageVersion }, 'catroweb') }}
      </p>
    </div>

    <div class="clear"></div>
    <div id="report-container" class="size-large">
      {% if app.user %}
        {% if my_program %}
          {{ "programs.reportOwnProgram"|trans({}, "catroweb") }} ... LOL?
        {% elseif already_reported %}
          {{ "programs.reportAlready"|trans({}, "catroweb") }}
        {% else %}
          <span id="report-form">
            {{ "programs.reportDialogHeader"|trans({}, "catroweb") }}
            <br>
          <textarea id="reportReason" placeholder="{{ "programs.reportDialogReason"|trans({}, "catroweb") }}"></textarea>
          <br>
          <button id="report-cancel" class="btn-white">{{ "cancel"|trans({}, "catroweb") }}</button>
          <button id="report-report" class="btn-green">{{ "report"|trans({}, "catroweb") }}</button>
          </span>
          <span id="report-done">
            {{ "programs.reportDone"|trans({}, "catroweb") }}
          </span>
        {% endif %}
      {% else %}
        {% set loginText = "loginText"|trans({}, "catroweb") %}
        {{ "programs.reportLoginText"|trans({"%login%" : "<a href=\"" ~ url('login') ~ "\">" ~ loginText ~ "</a>"}, "catroweb")|raw }}
      {% endif %}
    </div>
  </div>

  {% if isWebview() %}
    {% include ':social:social_share_mobile.html.twig' %}
  {% endif %}

  {% if program_details.languageVersion >= 0.97 %}
    <div class="show-hide-code">
      <div class="show-hide-code-text">SHOW CODE</div>
      <div class="show-hide-code-arrow">
        <img src="{{ asset('./images/symbols/codeview_arrow_down.png') }}">
      </div>
    </div>
    <div class="codeview-wrapper">
      {{ render(controller('AppBundle:Web/CodeView:viewCode', {'id' : program.id})) }}
    </div>
  {% endif %}

  <div id="program-bottom">
    <div id="icon-author">
      <div class="img-author-2 icon"></div>
      <a href="{{ url('profile', { id : program.user.id }) }}" class="icon-text">{{ program.user }}</a>
    </div>
    <div>
      <div class="img-age icon"></div>
      <span class="icon-text">{{ program_details.age }}</span>
    </div>
    <div>
      <div class="img-size icon"></div>
      <span class="icon-text">{{ program_details.filesize }} MB</span>
    </div>
    <div>
      <div class="img-downloads icon"></div>
      <span class="icon-text">{{ "programs.downloads"|trans({ '%downloads%' : program_details.downloads }, "catroweb") }}</span>
    </div>
    <div>
      <div class="img-views icon"></div>
      <span class="icon-text">{{ "programs.views"|trans({ '%views%' : program_details.views }, "catroweb") }}</span>
    </div>
    {% if program_details.showGraph %}
    <div id="icon-remix">
      <span><i class="fa fa-sitemap" aria-hidden="true" style="font-size: 26px"></i></span>
      <span class="icon-text">
        <a id="remix-graph-modal-link" href="#remix-graph-modal">
          {{ "programs.remixes"|transchoice(program_details.remixesLength, { '%remixes%' : program_details.remixesLength }, "catroweb") }}
        </a>
      </span>
    </div>
    {% endif %}
  </div>

  <div id="remix-graph-modal">
    <div class="close-remix-graph-modal">
      <img class="close-button" src="{{ asset('images/symbols/close_button.svg') }}" />
    </div>
    <div id="remix-graph-layer" class="modal-content"></div>
  </div>

  <div id="comment-successfully-reported">
    <h3>{{ 'programs.report_popup_header'|trans({}, 'catroweb') }}</h3>
    <p>{{ 'programs.report_popup'|trans({}, 'catroweb') }}</p>
    <button id="close-reported-popup">Ok</button>
  </div>

  <div id="program-comments">

    <p>{{ 'programs.comments'|trans({}, 'catroweb') }}</p>
    <div id="user-comment-wrapper">
      <textarea class="msg" style="width: 100%; height: 100px"></textarea>
      <button id="post-button" class="post-button">{{ 'programs.send'|trans({}, 'catroweb') }}</button>
    </div>

    <div id="comments-wrapper">
      {% for comment in program_details.comments|slice(0, 10) %}
        <div id="comment-{{ comment.id }}" class = "single-comment">
          <div class = "avatar-wrapper">
            <div class = "img-avatar"></div>
          </div>
          <div class = "comment-payload-wrapper">
            <div class = "name-date-wrapper">
              <div class = "usr-name">{{ comment.username }}</div>
              <div class = "date"> {{ comment.uploadDate.format('Y-m-d') }}</div>
              <button id="report-button-{{ comment.id }}" class="report-button" data-commentId="{{ comment.id }}">{{ 'programs.report'|trans({}, 'catroweb') }}</button>
              {% if  program_details.isAdmin  %}
                <button id="delete-button-{{ comment.id }}" class="delete-button" data-commentId="{{ comment.id }}">{{ 'programs.delete'|trans({}, 'catroweb') }}</button>
              {% endif %}
            </div>
            <div class = "comment-text">
              <p>{{ comment.text}}</p>
            </div>
          </div>
        </div>
      {% endfor %}
      {% for comment in program_details.comments|slice(10, program_details.comments|length) %}
        <div id="comment-{{ comment.id }}" class = "single-comment hidden">
          <div class = "avatar-wrapper">
            <div class = "img-avatar"></div>
          </div>
          <div class = "comment-payload-wrapper">
            <div class = "name-date-wrapper">
              <div class = "usr-name">{{ comment.username }}</div>
              <div class = "date"> {{ comment.uploadDate.format('Y-m-d') }}</div>
              <button id="report-button-{{ comment.id }}" class="report-button" data-commentId="{{ comment.id }}">{{ 'programs.report'|trans({}, 'catroweb') }}</button>
              {% if  program_details.isAdmin  %}
                <button id="delete-button-{{ comment.id }}" class="delete-button" data-commentId="{{ comment.id }}">{{ 'programs.delete'|trans({}, 'catroweb') }}</button>
              {% endif %}
            </div>
            <div class = "comment-text">
              <p>{{ comment.text }}</p>
            </div>
          </div>
        </div>
      {% endfor %}

      <div class = "show-more">
        <button id="show-more-button" {% if program_details.comments|length <= 10 %} style="display: none" {% endif %}>{{ 'programs.show_more'|trans({}, 'catroweb') }}</button>
      </div>

    </div>

  </div>
  {% if isWebview() %}
    {% include ':social:social_like_program_bottom.html.twig' %}
  {% endif %}

{% endblock %}

{% block js %}
  <script src="{{ asset('js/custom/Program.js') }}"></script>
  <script>
    var program = new Program('{{ path('ci_status', { 'id' : program.id }) }}', '{{ path('ci_build', { 'id' : program.id }) }}',
      '{{ 'apk.preparing'|trans({}, "catroweb") }}','{{ 'apk.text'|trans({}, "catroweb") }}','{{ asset('images/symbols/loading.gif') }}',
      '{{ 'programs.updateAppHeader'|trans({}, "catroweb") }}','{{ 'programs.updateAppText'|trans({}, "catroweb") }}',
      '{{ 'programs.btnClosePopup'|trans({}, "catroweb") }}');
    program.getApkStatus();
    program.createLinks();
    program.setReportListener({{ program.id }}, '{{ path('catrobat_api_report_program') }}');

    var download_href = document.getElementById("url-download").href;

    function blockEventListener(event) {
      event.preventDefault();
    }

    $(document).on("click", "#url-download", function() {
      var url_link = document.getElementById("url-download");
      if(url_link.href != 'javascript:void(0)') {
          url_link.href = 'javascript:void(0)';

        setTimeout(function() {
          url_link.href = download_href;
        }, 5000);

        window.location = download_href;
      }
      return false;
    });

    counter = 10;
    var cachedRemixData = null;
    var remixGraphTranslations = {
      ok: "{{ "ok"|trans({}, "catroweb") }}",
      by: "{{ "remixgraph.by"|trans({}, "catroweb") }}",
      open: "{{ "remixgraph.open"|trans({}, "catroweb") }}",
      showPaths: "{{ "remixgraph.showPaths"|trans({}, "catroweb") }}",
      programNotAvailableErrorTitle: "{{ "remixgraph.programNotAvailableErrorTitle"|trans({}, "catroweb") }}",
      programNotAvailableErrorDescription: "{{ "remixgraph.programNotAvailableErrorDescription"|trans({}, "catroweb") }}"
    };

    $(document).ready(function() {
      $("#remix-graph-modal-link").animatedModal({
        modalTarget: 'remix-graph-modal',
        animatedIn: 'zoomInUp',
        animatedOut: 'bounceOutDown',
        color: '#177f8d',
        beforeOpen: function() {
          destroyNetwork();
          if (cachedRemixData != null) {
            document.addEventListener('gesturestart', blockEventListener);
            document.ontouchmove = blockEventListener;
            render("remix-graph-modal", "remix-graph-layer", "close-button", cachedRemixData, remixGraphTranslations);
          } else {
            $.ajax({
              url: "{{ path('program_remix_graph', { 'id' : program.id }) }}",
              type: "get",
              success: function(remixData) {
                cachedRemixData = remixData;
                document.addEventListener('gesturestart', blockEventListener);
                document.ontouchmove = blockEventListener;
                render("remix-graph-modal", "remix-graph-layer", "close-button", remixData, remixGraphTranslations);
              },
              error: function(data) {
                alert("Unable to fetch remix-graph!");
              }
            });
          }
          console.log("The animation was called");
        },
        afterOpen: function() {
          console.log("The animation is completed");
        },
        beforeClose: function() {
          console.log("The animation was called");
        },
        afterClose: function() {
          console.log("The animation is completed");
          document.removeEventListener('gesturestart', blockEventListener);
          document.ontouchmove = null;
        }
      });
      $(document).on("click", "#show-more-button", function() {
        counter += 10;
        for(var i = counter - 10; i < counter && i < {{ (program_details.commentsLength) }}; i++)
        {
          $('.single-comment.hidden').first().removeClass("hidden");
        }
        if(!$('.single-comment.hidden').length){
          $('.show-more').hide();
        }
      });


      $(document).on("click", ".delete-button", function() {
        var pId = {{ program_details.id }};
        var commentId = $(this).data('commentid');
        $.ajax({
          url:"../delete",
          type: "get",
          data:{ProgramId: pId, CommentId: commentId},
          success: function(data) {
            if (data == "log_in")
              window.location.href = "../login";
            else if (data == "no_admin"){
              alert("You have no admin rights. Please Log in as an Admin");
            }
            else {
              $('#comments-wrapper').load(' #comments-wrapper');
              $('.msg').val("");
            }
          },
          error: function(data) {
            alert("something went terribly wrong");
          }});
      });

      $(document).on("click", ".post-button", function() {
        var msg = $('.msg').val();
        if(msg.length == 0) {
          return;
        }
        var pId = {{ program_details.id }};
        $.ajax({
          url: "../comment",
          type: "post",
          data:{Message: msg, ProgramId: pId},
          success: function(data) {
            if (data == "log_in")
              window.location.href = "../login";
            else
            {
              $('#comments-wrapper').load(' #comments-wrapper');
              $('.msg').val("");
            }
          },
          error: function() {
            alert("something went terribly wrong");
          }});
      });

      $(document).on("click", ".report-button", function() {
        var commentId = $(this).data('commentid');
        var pId = {{ program_details.id }};
        $.ajax({
          url:"../report",
          type: "get",
          data:{ProgramId: pId, CommentId: commentId},
          success: function(data) {
            if (data == "log_in")
              window.location.href = "../login";
            else {
              $('#comment-successfully-reported').show();
            }
          },
          error: function(data) {
            alert("something went terribly wrong");
          }});
      });

      $(document).on("click", "#close-reported-popup", function() {
        $('#comment-successfully-reported').hide();
      });

      $(document).on('click', '.show-hide-code', function() {
        var text = $('.show-hide-code-text');
        if(text.text() == 'SHOW CODE') {
          text.addClass('showing-code');
          $('.show-hide-code-arrow').addClass('rotate showing-code');
          $('.show-hide-code').addClass('show-code');
          text.text('HIDE CODE');
          $('.codeview-wrapper').slideDown();
        } else {
          $('.codeview-wrapper').slideUp(400, function(){
            text.removeClass('showing-code');
            $('.show-hide-code-arrow').removeClass('rotate showing-code');
            $('.show-hide-code').removeClass('show-code');
            text.text('SHOW CODE');
          });
        }
      });

      /*
      var show_hide_code_top = $('.show-hide-code').offset().top;
      $(window).scroll(function() {
        if ($(window).scrollTop() >= show_hide_code_top && $('.show-hide-code').hasClass('show-code')) {
          $('.show-hide-code').addClass('fixed');
        } else {
          $('.show-hide-code').removeClass('fixed');
        }
      });
      */
    });

  </script>
{% endblock %}
