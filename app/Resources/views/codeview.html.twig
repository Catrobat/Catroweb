{% block head %}
    <link rel="stylesheet" href="{{ asset('css/'~theme()~'/codeview.css') }}" media="screen"/>
{% endblock %}



{% import _self as self %}

{% macro dropbtn(object, path, scene_name) %}
    {% if object.getLooks()|length > 0 %}
        {% if scene_name is null %}
            <img src="{{ asset('./'~path~'images/'~object.getLooks()[0].getFileName()) }}" class="object-icon">
        {% else %}
            <img src="{{ asset('./'~path~'/'~scene_name~'/images/'~object.getLooks()[0].getFileName) }}" class="object-icon">
        {% endif %}
    {% else %}
        <img src="{{ asset('./images/symbols/empty.svg') }}" class="object-icon">
    {% endif %}
    <div class="object-meta">
        <div class="object-meta-name">
            <p>Object:</p>
            <p>Looks:</p>
            <p>Sounds:</p>
            <p>Scripts:</p>
        </div>
        <div class="object-meta-value">
            <p>{{ object.getName() }}</p>
            <p>{{ object.getLooks()|length }}</p>
            <p>{{ object.getSounds()|length }}</p>
            <p>{{ object.getScripts()|length }}</p>
        </div>
    </div>
    <div class="arrow">
        <img src="{{ asset('./images/symbols/codeview_arrow_down.png') }}">
    </div>
{% endmacro %}

{% macro dropcontent(object, path, scene_name) %}
    {% import _self as self %}
    {% set sound_counter = 0 %}
    {% if object.getScripts()|length > 0 %}
        {% for script in object.getScripts() %}
            <div class="script">
                <div class="script-top-brick" style="background-image: url({{ asset('images/bricks/'~script.getImgFile) }})">
                    <div class="script-text">
                        <span class="script-type">{{ script.getCaption() }}</span>
                    </div>
                    {% if script.getLookFileName() is defined %}
                        {% if scene_name is null %}
                            <img src="{{ asset('./'~path~'images/'~script.getLookFileName()) }}" class="brick-look script-brick-look">
                        {% else %}
                            <img src="{{ asset('./'~path~'/'~scene_name~'/images/'~script.getLookFileName()) }}" class="brick-look script-brick-look">
                        {% endif %}
                    {% endif %}
                </div>
                <div class="script-bricks-wrapper">
                    {% for brick in script.getBricks() %}
                        <div class="brick" style="background-image: url({{ asset('images/bricks/'~brick.getImgFile()) }})">
                            <div class="brick-text">{{ brick.getCaption() }}</div>
                            {% if brick.getLookFileName() is defined %}
                                {% if scene_name is null %}
                                    <img src="{{ asset('./'~path~'images/'~brick.getLookFileName()) }}" class="brick-look">
                                {% else %}
                                    <img src="{{ asset('./'~path~'/'~scene_name~'/images/'~brick.getLookFileName()) }}" class="brick-look">
                                {% endif %}
                            {% endif %}
                            {% if brick.getSoundFileName() is defined %}
                                {% if scene_name is null %}
                                    <img src="{{ asset('images/symbols/sound.svg') }}" id="sound-{{ sound_counter }}" class="brick-sound"
                                         onclick="initialSound('{{ asset('./'~path~'sounds/'~brick.getSoundFileName()) }}', {{ sound_counter }});">
                                {% else %}
                                    <img src="{{ asset('images/symbols/sound.svg') }}" id="sound-{{ sound_counter }}" class="brick-sound"
                                         onclick="initialSound('{{ asset('./'~path~'/'~scene_name~'/sounds/'~brick.getSoundFileName()) }}', {{ sound_counter }});">
                                {% endif %}
                                <img src="{{ asset('images/symbols/stop.png') }}" id="soundStop-{{ sound_counter }}" class="brick-sound" style="display:none;"
                                     onclick="stopSound({{ sound_counter }});">
                                {% set sound_counter = sound_counter + 1 %}
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% endfor %}
    {% else %}
        <p class="note">NO SCRIPTS</p>
    {% endif %}
{% endmacro %}

{% macro object(object, path, scene_name) %}
    {% import _self as self %}
    <div class="dropbtn collapse-btn">
        {{ self.dropbtn(object, path, scene_name) }}
    </div>
    <div class="dropdown-content">
        {{ self.dropcontent(object, path, scene_name) }}
    </div>
{% endmacro %}

{% macro group(object_group, path, scene_name) %}
    {% import _self as self %}
    <div class="dropbtn collapse-btn">
        <div class="object-meta outdented">
            <div class="object-meta-name">
                <p>Group:</p>
                <p>Objects:</p>
            </div>
            <div class="object-meta-value">
                <p>{{ object_group.getName() }}</p>
                <p>{{ object_group.getObjects()|length }}</p>
            </div>
        </div>
        <div class="arrow group-arrow">
            <img src="{{ asset('./images/symbols/codeview_arrow_down.png') }}">
        </div>
    </div>
    <div class="group-dropdown-content">
        {% if object_group.getObjects() is not empty %}
            {% for object in object_group.getObjects() %}
                <div class="object">
                    {{ self.object(object, path, scene_name) }}
                </div>
            {% endfor %}
        {% else %}
            <p class="note">NO OBJECTS</p>
        {% endif %}
    </div>
{% endmacro %}

{% macro object_list(background, object_list, path, scene_name) %}
    {% import _self as self %}
    <div id="background-wrapper">
        <p class="heading">BACKGROUND</p>
        <div id="background">
            {{ self.object(background, path, scene_name) }}
        </div>
    </div>

    <div id="object-list-wrapper">
        <p class="heading">OBJECTS</p>
        {% if object_list is not empty %}
            {% for code_object in object_list %}
                <div class="object">
                    {% if code_object.isGroup() %}
                        {{ self.group(code_object, path, scene_name) }}
                    {% else %}
                        {{ self.object(code_object, path, scene_name) }}
                    {% endif %}
                </div>
            {% endfor %}
        {% else %}
            <p class="note">NO OBJECTS</p>
        {% endif %}
    </div>
{% endmacro %}

{% macro scenes(path, scene_list) %}
    {% import _self as self %}
    <div class="scenes-wrapper">
        {% for scene in scene_list %}
            <div class="scene">
                <div class="scene-dropbtn collapse-btn">
                    <p class="heading scene-heading">SCENE: <span>{{ scene.getName() }}</span></p>
                    <div class="arrow scene-arrow">
                        <img src="{{ asset('./images/symbols/codeview_arrow_down.png') }}">
                    </div>
                </div>
                <div class="scene-content">
                    {{ self.object_list(scene.getBackground(), scene.getObjects(), path, scene.getName()) }}
                </div>
            </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro brick_statistic(statistic) %}
    <div class="specific-brick-stats">
        <span class="light">Total:</span><span class="heavy specific-stat-num">{{ statistic.numTotal }}</span>
    </div>
    <div class="specific-brick-stats">
        <span class="light">Different:</span><span class="heavy specific-stat-num">{{ statistic.different.numDifferent }}</span>
    </div>
    <div class="different-statistic-dropcontent">
        <div class="exit-btn"><img src="{{ asset('./images/symbols/exit_cross.svg') }}"></div>
        <span class="separation-line"></span>
        {% if statistic.different.listDifferent|length == 0 %}
            <p class="light no-brick-type-note">NO BRICKS</p>
        {% else %}
            {% for different_brick_type in statistic.different.listDifferent %}
                <p class="heavy different-brick-type">{{ different_brick_type|decamelize }}</p>
            {% endfor %}
        {% endif %}
    </div>
{% endmacro %}

{% macro statistic(program_statistic) %}
    {% import _self as self %}
    <div class="total-statistic">
        <div class="flex-container">
            <div class="flex-left">
                {% if program_statistic.getSceneStatistic() > 0 %}
                    <p class="light">Total number of <span class="brick-stat-heading">scenes</span>:</p>
                {% endif %}
                <p class="light">Total number of <span class="brick-stat-heading">scripts</span>:</p>
                <p class="light">Total number of <span class="brick-stat-heading">bricks</span>:</p>
                <p class="light">Total number of <span class="brick-stat-heading">objects</span>:</p>
                <p class="light">Total number of <span class="brick-stat-heading">looks</span>:</p>
                <p class="light">Total number of <span class="brick-stat-heading">sounds</span>:</p>
                {% if program_statistic.getGlobalVarStatistic() is not null %}
                    <p class="light">Total number of <span class="brick-stat-heading">globals</span>:</p>
                {% endif %}
                {% if program_statistic.getLocalVarStatistic() is not null %}
                    <p class="light">Total number of <span class="brick-stat-heading">locals</span>:</p>
                {% endif %}
            </div>
            <div class="flex-right">
                {% if program_statistic.getSceneStatistic() > 0 %}
                    <p class="heavy">{{ program_statistic.getSceneStatistic() }}</p>
                {% endif %}
                <p class="heavy">{{ program_statistic.getScriptStatistic() }}</p>
                <p class="heavy">{{ program_statistic.getBrickStatistic() }}</p>
                <p class="heavy">{{ program_statistic.getObjectStatistic() }}</p>
                <p class="heavy">{{ program_statistic.getLookStatistic() }}</p>
                <p class="heavy">{{ program_statistic.getSoundStatistic() }}</p>
                {% if program_statistic.getGlobalVarStatistic() is not null %}
                    <p class="heavy">{{ program_statistic.getGlobalVarStatistic() }}</p>
                {% endif %}
                {% if program_statistic.getLocalVarStatistic() is not null %}
                    <p class="heavy">{{ program_statistic.getLocalVarStatistic() }}</p>
                {% endif %}
            </div>
        </div>
    </div>
    <div class="brick-statistics">
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Event Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().eventBricks) }}
        </div>
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Control Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().controlBricks) }}
        </div>
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Motion Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().motionBricks) }}
        </div>
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Sound Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().soundBricks) }}
        </div>
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Looks Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().looksBricks) }}
        </div>
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Pen Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().penBricks) }}
        </div>
        <div class="brick-statistic-block">
            <p class="brick-stat-heading">Data Bricks:</p>
            {{ self.brick_statistic(program_statistic.getBrickTypeStatistic().dataBricks) }}
        </div>
    </div>
{% endmacro %}

{% block body %}

    <div class="show-hide-code-statistic">
        <div class="show-hide-code-statistic-text">SHOW CODE STATISTIC</div>
        <div class="show-hide-code-statistic-arrow">
            <img src="{{ asset('./images/symbols/codeview_arrow_down.png') }}">
        </div>
    </div>
    <div id="codestatistic-wrapper">
        {% if parsed_program is null %}
            <p class="exception">STATISTIC CAN'T BE DISPLAYED</p>
        {% else %}
            {{ self.statistic(parsed_program.getCodeStatistic()) }}
        {% endif %}
    </div>

    <div class="show-hide-code">
        <div class="show-hide-code-text">SHOW CODE</div>
        <div class="show-hide-code-arrow">
            <img src="{{ asset('./images/symbols/codeview_arrow_down.png') }}">
        </div>
    </div>
    <div id="codeview-wrapper">
        {% if parsed_program is null %}
            <p class="exception">CODE CAN'T BE DISPLAYED</p>
        {% else %}
            {% if parsed_program.hasScenes() %}
                {% if parsed_program.getScenes()|length > 1 %}
                    {{ self.scenes(path, parsed_program.getScenes()) }}
                {% else %}
                    {{ self.object_list(parsed_program.getScenes()[0].getBackground(),
                        parsed_program.getScenes()[0].getObjects(), path,
                        parsed_program.getScenes()[0].getName()) }}
                {% endif %}
            {% else %}
                {{ self.object_list(parsed_program.getBackground(), parsed_program.getObjects(), path, null) }}
            {% endif %}
        {% endif %}
    </div>

{% endblock %}

{% block js %}
    <script>

        var sound_map = {};
        var current_brick_stat_block = null;

        $(document).ready(function() {
            $('.collapse-btn').on("click", function() {
                $(this).next().slideToggle(250, 'linear');
                $(this).find('.arrow').toggleClass('rotate');
            });

            $(document).on('click', '.show-hide-code', function() {
                var text = $('.show-hide-code-text');
                if(text.text() == 'SHOW CODE') {
                    $('.show-hide-code-arrow').addClass('rotate showing-code');
                    text.text('HIDE CODE');
                    $('#codeview-wrapper').slideDown();
                } else {
                    $('#codeview-wrapper').slideUp(400, function(){
                        $('.show-hide-code-arrow').removeClass('rotate showing-code');
                        text.text('SHOW CODE');
                    });
                }
            });

            $(document).on('click', '.show-hide-code-statistic', function() {
                var text = $('.show-hide-code-statistic-text');
                if(text.text() == 'SHOW CODE STATISTIC') {
                    $('.show-hide-code-statistic-arrow').addClass('rotate showing-code');
                    text.text('HIDE CODE STATISTIC');
                    $('#codestatistic-wrapper').slideDown();
                } else {
                    $('#codestatistic-wrapper').slideUp(400, function(){
                        $('.show-hide-code-statistic-arrow').removeClass('rotate showing-code');
                        text.text('SHOW CODE STATISTIC');
                    });
                }
            });

            $(document).on('click', '.brick-statistic-block', function() {
                if (current_brick_stat_block !== null) {
                    current_brick_stat_block.find('.different-statistic-dropcontent').fadeToggle(150);
                    current_brick_stat_block.toggleClass('active');
                    console.log('hi');
                }

                if ($(this).is(current_brick_stat_block)) {
                    current_brick_stat_block = null;
                } else {
                    $(this).find('.different-statistic-dropcontent').fadeToggle(150);
                    $(this).toggleClass('active');
                    current_brick_stat_block = $(this);
                }
            });
        });

        function initialSound(file_name, id) {
            var audio = new Audio(file_name);
            audio.play();
            audio.addEventListener('ended',function(){
                $("#soundStop-"+id).hide();
                $("#sound-"+id).show();
            });
            sound_map[id] = audio;
            $("#sound-"+id).hide();
            $("#soundStop-"+id).show();
        }

        function stopSound(id){
            sound_map[id].pause();
            sound_map[id].currentTime = 0;
            $("#soundStop-"+id).hide();
            $("#sound-"+id).show();
        }

    </script>
{% endblock %}
