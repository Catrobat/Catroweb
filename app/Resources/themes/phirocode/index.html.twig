{% extends ':Default:base.html.twig' %}

{% block head %}
  <link rel="stylesheet" href="{{ asset('css/'~theme()~'/index.css') }}" media="screen" />
  <link rel="stylesheet" href="{{ asset('css/plugins/sweetalert.css') }}" />
{% endblock %}

{% block body %}
  <div id="featuredPrograms">
    <h1>{{ "programs.featured"|trans({}, "catroweb") }}</h1>
    <div id="feature-slider" class="owl-carousel">
      {% for feature in featured %}
        <div><a href="{{ feature.url }}"><img src="{{ asset(feature.image) }}" /></a></div>
      {% endfor %}
    </div>
  </div>

  <div id="newest">
    <h1>{{ "programs.newest"|trans({}, "catroweb") }}</h1>
    <div class="programs"></div>
  </div>

  <div id="recommended">
    <div class="help-headline">
      <h1 class="help-title">{{ "programs.recommended"|trans({}, "catroweb") }}</h1>
      {% if not ("FR" in app.request.locale) and not ("fr" in app.request.locale) %}
        <img class="help-icon" src="{{ asset('images/symbols/help_small.png') }}" alt="Help" title="Help"
             data-help-title="{{ "indexPage.recommendedSection.info.title"|trans({}, "catroweb") }}"
          {% if not ("DE" in app.request.locale) and not ("de" in app.request.locale) %}
            data-help-description="{{ "indexPage.recommendedSection.info.description_B_VersionTest"|trans({}, "catroweb") }}"
          {% else %}
            data-help-description="{{ "indexPage.recommendedSection.info.description"|trans({}, "catroweb") }}"
          {% endif %}
             width="30" height="30" />
      {% endif %}
    </div>
    <div class="programs"></div>
  </div>

  <div id="mostDownloaded">
    <h1>{{ "programs.most.downloaded"|trans({}, "catroweb") }}</h1>
    <div class="programs"></div>
  </div>

  <div id="mostViewed">
    <h1>{{ "programs.most.viewed"|trans({}, "catroweb") }}</h1>
    <div class="programs"></div>
  </div>

  <div id="random">
    <h1>{{ "programs.random"|trans({}, "catroweb") }}</h1>
    <div class="programs"></div>
  </div>
{% endblock %}

{% block js %}
  <script src="{{ asset('./js/globalPlugins/owl.carousel.min.js') }}"></script>
  <script>
    var newest = new ProgramLoader('#newest', '{{ path('api_recent_programs') }}');
    var recommendedByPageId = {{ constant('Catrobat\\AppBundle\\RecommenderSystem\\RecommendedPageId::INDEX_PAGE') }};
    var recommended = new ProgramLoader('#recommended', '{{ path('api_recsys_general_programs') }}', undefined, undefined, recommendedByPageId);
    var mostDownloaded = new ProgramLoader('#mostDownloaded', '{{ path('api_most_downloaded_programs') }}');
    var mostViewed = new ProgramLoader('#mostViewed', '{{ path('api_most_viewed_programs') }}');
    var random = new ProgramLoader('#random', '{{ path('api_random_programs') }}');

    newest.init();
    recommended.init();
    mostDownloaded.init();
    mostViewed.init();
    random.init();

    function performClickStatisticRequest(href, type, isRecommendedProgram, userSpecificRecommendation, programID) {
      var url = "{{ path('click_stats') }}";
      var params = {};

      if (!isRecommendedProgram) {
        url = "{{ path('homepage_click_stats') }}";
        if (!["featured", "newest", "mostDownloaded", "mostViewed", "random", "nolb-example"].contains(type)) {
          alert("You clicked at a program of an unknown section!");
          return;
        }
        params = { type: type, programID: programID };
      } else {
        params = { type: type, recFromID: 0, recID: programID, isScratchProgram: 0, recIsUserSpecific: userSpecificRecommendation };
      }

      $.ajaxSetup({ async: false });
      $.post(url, params, function (data) {
        if (data == 'error')
          console.log("No click statistic is created!");
      }).fail(function (data) {
        console.log(data);
      });
      window.location.href = href;
    }

    $(document).on("click", ".program", function() {
      var clicked_program_id = this.id.replace("program-", "");
      this.className += " visited-program";
      var stored_visits = sessionStorage.getItem("visits");

      if(!stored_visits){
        var new_visits = [clicked_program_id];
        sessionStorage.setItem("visits", JSON.stringify(new_visits));
      }
      else{
        var parsed_visits = JSON.parse(stored_visits);
        if(!($.inArray(clicked_program_id, parsed_visits)>=0)){
          parsed_visits.push(clicked_program_id);
          sessionStorage.setItem("visits", JSON.stringify(parsed_visits));
        }
      }
    });

    $(document).one('click', ".owl-item > div > a", function(event) {
      event.preventDefault();
      var href = $(this).attr('href');
      var programID = ((href.indexOf("program") > 0) ? (href.split("program")[1].match(/[0-9]+/))[0] : 0);
      var type = "featured";
      performClickStatisticRequest(href, type, false, 0, programID);
    });

    $(document).one('click', ".rec-programs", function(event) {
      event.preventDefault();
      var isRecommendedProgram = $(this).hasClass("homepage-recommended-programs");
      var type = (isRecommendedProgram ? "rec_homepage" : $(this).parent(".program").parent(".programs").parent().attr("id"));
      var href = $(this).attr('href');
      var recommendedProgramID = ((href.indexOf("program") > 0) ? (href.split("program")[1].match(/[0-9]+/))[0] : 0);
      var userSpecificRecommendation = ((href.indexOf("rec_user_specific=") > 0) ? parseInt((href.split("rec_user_specific=")[1].match(/[0-9]+/))[0]) : 0);
      performClickStatisticRequest(href, type, isRecommendedProgram, userSpecificRecommendation, recommendedProgramID);
    });

    $(document).on("click", ".help-icon", function() {
      swal({
          title: $(this).attr("data-help-title"),
          text: $(this).attr("data-help-description"),
          showCancelButton: false,
          confirmButtonText: "{{ "ok"|trans({}, "catroweb") }}",
          closeOnConfirm: true
        },
        function() {}
      );
    });

  </script>
{% endblock %}
