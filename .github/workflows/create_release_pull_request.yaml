name: Create Release PR

on:
  workflow_dispatch:

jobs:
  createRelease_01:
    name: Create Pull Request to master
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Calculate new version
        id: new_version
        run: |
          # Fetch the latest tag and increment the patch version
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          year=$(date +%y)
          month=$(date +%-m)
          if [[ $latest_tag =~ ^${year}\.${month}\.([0-9]+)$ ]]; then
            patch=${BASH_REMATCH[1]}
            new_patch=$((patch + 1))
          else
            new_patch=0
          fi
          new_version="${year}.${month}.${new_patch}"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Generate Release Notes
        id: generate_notes
        run: |
          notes=$(git log --pretty=format:"* %s" `git describe --tags --abbrev=0`..HEAD)
          echo "release_notes=$notes" >> $GITHUB_ENV

      - name: Dummy Changes to keep PR open
        run: |
          echo "Dummy Change" >> .env

      - name: Create Pull Request to main branch
        id: cpr-main
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Prepare release v${{ env.new_version }}
          committer: Catrobot <Catrobot@catroweb.github.com>
          title: 'Release v${{ env.new_version }} into master'
          body: |
            ### Release v${{ env.new_version }}

            Release ToDo List:
              - [X] Bump our version code
              - [X] Update Changelog
              - [X] Create new Release/Tag on GitHub

            This pull request is autogenerated using GitHub Actions.
            For more information checkout the action '.github/workflows/create_release_pull_request.yaml'
          labels: automated, new-release, master
          branch: release/v${{ env.new_version }}
          delete-branch: true
          reviewers: dmetzner
          base: master

  createRelease_02:
    name: Create Pull Request to develop
    runs-on: ubuntu-latest
    needs: createRelease_01

    steps:
      - uses: actions/checkout@v4

      - name: Set Version Code
        run: |
          sed -i -E "s/APP_VERSION='[0-9]+\.[0-9]+\.[0-9]+'/APP_VERSION='${{ env.new_version }}'/" .env

      - name: 'Setup Node and npm modules'
        uses: ./.github/actions/setup-npm-node-modules

      - name: Update Release Notes
        run: |
          echo -e "## v${{ env.new_version }}\n${{ env.release_notes }}\n" >> CHANGELOG.md
          npm run fix-asset

      - name: Commit changes
        run: |
          git config --global user.name "Catrobot"
          git config --global user.email "Catrobot@catroweb.github.com"
          git commit -am "Bump version to ${{ env.new_version }}"

      - name: Create Pull Request to develop branch
        id: cpr-develop
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Prepare release v${{ env.new_version }}
          committer: Catrobot <Catrobot@catroweb.github.com>
          title: 'Release v${{ env.new_version }} into develop'
          body: |
            ### Release v${{ env.new_version }}

            Release ToDo List:
              - [X] Bump our version code
              - [X] Update Changelog
              - [X] Create new Release/Tag on GitHub

            This pull request is autogenerated using GitHub Actions.
            For more information checkout the action '.github/workflows/create_release_pull_request.yaml'
          labels: automated, new-release
          branch: release/v${{ env.new_version }}
          delete-branch: true
          reviewers: dmetzner
          base: develop

  createReleaseTag:
    name: Create GitHub Release v${{ env.new_version }}
    runs-on: ubuntu-latest
    needs: createRelease_02

    steps:
      - uses: actions/checkout@v4

      - name: Checkout Release Branch
        run: git checkout release/v${{ env.new_version }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ env.new_version }} --target release/v${{ env.new_version }} -t "v${{ env.new_version }}" -n "${{ env.release_notes }}"
