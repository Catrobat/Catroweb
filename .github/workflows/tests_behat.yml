
# Runs all Behat test suites parallel using the matrix strategy via docker in the latest ubuntu build.

name: Behat Tests

on: [push, pull_request]


jobs:

  tests_behat:
    name: Behat Tests
    runs-on: ubuntu-latest
    strategy:
      #
      #  Notes:
      #         - Check the behat.yml when changing / creating new suites
      #         - suites will finish their work even if another suite fails (fail-fast: false)
      #
      fail-fast: false
      matrix:
        testSuite:
          - admin
          - api_general
          - api_profile
          - api_project
          - api_upload
          - ci
          - flavor
          - web_general
          - web_profile
          - web_project
          - gamejam
          - gamejam_web
          - gamejam_javascript
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          cd docker
          docker-compose -f docker-compose.test.yml build
          docker-compose -f docker-compose.test.yml up -d

      # Test Run
      - name: Behat ${{ matrix.testSuite }} tests
        id: test-run
        continue-on-error: true
        run: |
          echo ::set-output name=status::failure
          docker exec app.catroweb.test bin/behat -s ${{ matrix.testSuite }}
          echo ::set-output name=status::success

      # Rerun #1
      - name: 1. Rerun for Behat ${{ matrix.testSuite }} tests
        if: steps.test-run.outputs.status != 'success'
        id: test-rerun-1
        continue-on-error: true
        run: |
          echo ::set-output name=status::failure
          docker exec app.catroweb.test bin/behat -s ${{ matrix.testSuite }} --rerun
          echo ::set-output name=status::success

        # Rerun #2
      - name: 2. Rerun for Behat ${{ matrix.testSuite }} tests
        if: steps.test-run.outputs.status != 'success' && steps.test-rerun-1.outputs.status != 'success'
        id: test-rerun-2
        continue-on-error: true
        run: |
          echo ::set-output name=status::failure
          docker exec app.catroweb.test bin/behat -s ${{ matrix.testSuite }} --rerun
          echo ::set-output name=status::success

      # Rerun #3
      - name: 3. Rerun for Behat ${{ matrix.testSuite }} tests
        if: steps.test-run.outputs.status != 'success' && steps.test-rerun-1.outputs.status != 'success' && steps.test-rerun-2.outputs.status != 'success'
        id: test-rerun-3
        run: |
          docker exec app.catroweb.test bin/behat -s ${{ matrix.testSuite }} --rerun

      - name: DEBUG
        if: always()
        run: |
          ls
          cd tests
          ls
          cd testreports
          ls
          cd behat
          ls
          cd htmlTestReport
          ls

      - name: Create Artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: Behat-${{ matrix.testSuite }}-TestReport
          path: tests/testreports/behat/htmlTestReport
