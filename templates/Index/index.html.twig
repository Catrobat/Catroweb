{% extends 'Default/base.html.twig' %}

{% block head %}
  <link rel="stylesheet" href="{{ asset('css/'~theme()~'/index.css') }}" media="screen"/>
{% endblock %}

{% block body %}

  {% if not app.user %}
    {{ include('Index/welcome-section.html.twig') }}
  {% endif %}

  <div id="featuredPrograms">
    <h1>{{ "programs.featured"|trans({}, "catroweb") }}</h1>

    {% if featured|length > 0 %}
      {{ include('Index/featured_programs_carousel.html.twig',
        { 'carousel' :
          {
            'id' : 'feature-slider',
            'slideCount' : featured|length,
            'slides' : featured,
            'classes' : '',
            'controls' : true
          }
        }
      ) }}
    {% endif %}

  </div>

  {% if theme() == 'pocketgalaxy' %}

    <div id="submissions">
      <h1>{{ "programs.submitted"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

    <div id="sample">
      <h1>{{ "programs.sample"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

    <div id="related">
      <h1>{{ "programs.related"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

  {% else %}

    <div id="newest">
      <h1>{{ "programs.newest"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

    <div id="recommended">
      <h1>{{ "programs.recommended"|trans({}, "catroweb") }}
        <i id="help-button" class="help-icon fa fa-question-circle ml-1 catro-icon-button"
           data-toggle="tooltip" title="Help"
           data-help-title="{{ "indexPage.recommendedSection.info.title"|trans({}, "catroweb") }}"
           data-help-description="{{ "indexPage.recommendedSection.info.description"|trans({}, "catroweb") }}">
        </i>
      </h1>
      <div class="programs"></div>
    </div>

    <div id="mostDownloaded">
      <h1>{{ "programs.most.downloaded"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

    <div id="mostViewed">
      <h1>{{ "programs.most.viewed"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

    <div id="random">
      <h1>{{ "programs.random"|trans({}, "catroweb") }}</h1>
      <div class="programs"></div>
    </div>

  {% endif %}
{% endblock %}

{% block js %}
  <script>
    {% if theme() == 'pocketgalaxy' %}

    let related = new ProgramLoader('#related', '{{ path('api_search_programs') }}?q=galaxy')
    related.init()

    {% else %}
    let newest = new ProgramLoader('#newest', '{{ path('api_recent_programs') }}')
    let recommendedByPageId = {{ constant('App\\Catrobat\\RecommenderSystem\\RecommendedPageId::INDEX_PAGE') }};
    let recommended = new ProgramLoader('#recommended', '{{ path('api_recsys_general_programs') }}', undefined, undefined, recommendedByPageId)
    let mostDownloaded = new ProgramLoader('#mostDownloaded', '{{ path('api_most_downloaded_programs') }}')
    let mostViewed = new ProgramLoader('#mostViewed', '{{ path('api_most_viewed_programs') }}')
    let random = new ProgramLoader('#random', '{{ path('api_random_programs') }}')

    newest.init()
    recommended.init()
    mostDownloaded.init()
    mostViewed.init()
    random.init()

    {% endif %}


    function performClickStatisticRequest (href, type, isRecommendedProgram, userSpecificRecommendation, programID)
    {
      let url = "{{ path('click_stats') }}"
      let params = {}

      if (!isRecommendedProgram)
      {
        url = "{{ path('homepage_click_stats') }}"
        if (['featured', 'newest', 'mostDownloaded', 'mostViewed', 'random'].indexOf(type) === -1)
        {
          alert('You clicked at a program of an unknown section!')
          return
        }
        params = {type: type, programID: programID}
      }
      else
      {
        params = {
          type             : type,
          recFromID        : 0,
          recID            : programID,
          isScratchProgram : 0,
          recIsUserSpecific: userSpecificRecommendation
        }
      }

      $.post(url, params, function (data) {
        if (data === 'error')
        {
          console.log('No click statistic is created!')
        }
      }).always(function () {
        window.location.href = href
      })
      .fail(function (data) {
        console.log(data)
      })

    }

    $(document).on('click', '.program', function () {
      let clicked_program_id = this.id.replace('program-', '')
      this.className += ' visited-program'
      let stored_visits = sessionStorage.getItem('visits')

      if (!stored_visits)
      {
        let new_visits = [clicked_program_id]
        sessionStorage.setItem('visits', JSON.stringify(new_visits))
      }
      else
      {
        let parsed_visits = JSON.parse(stored_visits)
        if (!($.inArray(clicked_program_id, parsed_visits) >= 0))
        {
          parsed_visits.push(clicked_program_id)
          sessionStorage.setItem('visits', JSON.stringify(parsed_visits))
        }
      }
    })

    $(document).one('click', '#feature-slider > div > div > a', function (event) {
      event.preventDefault()
      let href = $(this).attr('href')
      let programID = ((href.indexOf('program') > 0) ? (href.split('program')[1].match(/[0-9]+/))[0] : 0)
      let type = 'featured'
      performClickStatisticRequest(href, type, false, 0, programID)
    })

    $(document).one('click', '.rec-programs', function (event) {
      event.preventDefault()
      let isRecommendedProgram = $(this).hasClass('homepage-recommended-programs')
      let type = (isRecommendedProgram ? 'rec_homepage' : $(this).parent('.program').parent('.programs').parent().attr('id'))
      let href = $(this).attr('href')
      let recommendedProgramID = ((href.indexOf('program') > 0) ? (href.split('program')[1].match(/[0-9]+/))[0] : 0)
      let userSpecificRecommendation = ((href.indexOf('rec_user_specific=') > 0) ? parseInt((href.split('rec_user_specific=')[1].match(/[0-9]+/))[0]) : 0)
      performClickStatisticRequest(href, type, isRecommendedProgram, userSpecificRecommendation, recommendedProgramID)
    })

    $(document).on('click', '#help-button', function () {
      swal({
          title            : $(this).attr('data-help-title'),
          text             : $(this).attr('data-help-description'),
          showCancelButton : false,
          confirmButtonText: "{{ "ok"|trans({}, "catroweb") }}",
          closeOnConfirm   : true,
          type             : 'question',
        },
        function () {
        }
      )
    })

  </script>
{% endblock %}
