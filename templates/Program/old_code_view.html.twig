{#
  @deprecated view only used for projects with a version < 0.994
  Code View is now handled by the Catblocks Team
#}

{% block head %}
  <link rel="stylesheet" href="{{ asset('css/'~theme()~'/old_code_view.css') }}" media="screen"/>
{% endblock %}


{% import _self as self %}

{% macro dropbtn(object, path, scene_name) %}

  {% if object.getLooks()|length > 0 %}

    {% if scene_name is null and assetExists(path~'images/'~object.getLooks()[0].getFileName()) %}
      <img src="{{ asset(path~'images/'~object.getLooks()[0].getFileName()) }}"
           class="object-icon">
    {% elseif assetExists(path~scene_name~'/images/'~object.getLooks()[0].getFileName()) %}
      <img src="{{ asset(path~scene_name~'/images/'~object.getLooks()[0].getFileName()) }}"
           class="object-icon">
    {% else %}
      <div class="object-icon">
        <i class="no-image-found-icon fas fa-times"></i>
      </div>
    {% endif %}

  {% else %}
    <div class="object-icon">
      <i class="no-image-found-icon fas fa-times"></i>
    </div>
  {% endif %}

  <div class="object-meta">

    <div class="object-meta-name">
      <p>Object:</p>
      <p>Looks:</p>
      <p>Sounds:</p>
      <p>Scripts:</p>
    </div>
    <div class="object-meta-value">
      <p>{{ object.getName() }}</p>
      <p>{{ object.getLooks()|length }}</p>
      <p>{{ object.getSounds()|length }}</p>
      <p>{{ object.getScripts()|length }}</p>
    </div>
  </div>

  <div class="arrow">
    <i class="fas fa-caret-left"></i>
  </div>
{% endmacro %}

{% macro dropcontent(object, path, scene_name) %}
  {% import _self as self %}
  {% set sound_counter = 0 %}
  {% if object.getScripts()|length > 0 %}
    {% for script in object.getScripts() %}
      <div class="script">
        <div class="script-top-brick" style="background-image: url({{ asset('images/bricks/'~script.getImgFile) }})">
          <div class="script-text">
            <span class="script-type">{{ script.getCaption() }}</span>
          </div>
        </div>
        <div class="script-bricks-wrapper">
          {% for brick in script.getBricks() %}
            <div class="brick" style="background-image: url({{ asset('images/bricks/'~brick.getImgFile()) }})">
              <div class="brick-text">{{ brick.getCaption() }}</div>
            </div>
          {% endfor %}
        </div>
      </div>
    {% endfor %}
  {% else %}
    <p class="note">NO SCRIPTS</p>
  {% endif %}
{% endmacro %}

{% macro object(object, path, scene_name) %}
  {% import _self as self %}
  <div class="dropbtn collapse-btn">
    {{ self.dropbtn(object, path, scene_name) }}
  </div>
  <div class="dropdown-content">
    {{ self.dropcontent(object, path, scene_name) }}
  </div>
{% endmacro %}

{% macro group(object_group, path, scene_name) %}
  {% import _self as self %}
  <div class="dropbtn collapse-btn">
    <div class="object-meta outdented">
      <div class="object-meta-name">
        <p>Group:</p>
        <p>Objects:</p>
      </div>
      <div class="object-meta-value">
        <p>{{ object_group.getName() }}</p>
        <p>{{ object_group.getObjects()|length }}</p>
      </div>
    </div>
    <div class="arrow group-arrow">
      <i class="catro-icon-button  fas fa-caret-down"></i>
    </div>
  </div>
  <div class="group-dropdown-content">
    {% if object_group.getObjects() is not empty %}
      {% for object in object_group.getObjects() %}
        <div class="object">
          {{ self.object(object, path, scene_name) }}
        </div>
      {% endfor %}
    {% else %}
      <p class="note">NO ACTORS OR OBJECTS</p>
    {% endif %}
  </div>
{% endmacro %}

{% macro object_list(background, object_list, path, scene_name) %}
  {% import _self as self %}
  <div id="background-wrapper">
    <p class="heading">BACKGROUND</p>
    <div id="background">
      {{ self.object(background, path, scene_name) }}
    </div>
  </div>

  <div id="object-list-wrapper">
    <p class="heading">ACTORS AND OBJECTS</p>
    {% if object_list is not empty %}
      {% for code_object in object_list %}
        <div class="object">
          {% if code_object.isGroup() %}
            {{ self.group(code_object, path, scene_name) }}
          {% else %}
            {{ self.object(code_object, path, scene_name) }}
          {% endif %}
        </div>
      {% endfor %}
    {% else %}
      <p class="note">NO ACTORS OR OBJECTS</p>
    {% endif %}
  </div>
{% endmacro %}

{% macro scenes(path, scene_list) %}
  {% import _self as self %}
  <div class="scenes-wrapper">
    {% for scene in scene_list %}
      <div class="scene">
        <div class="scene-dropbtn collapse-btn">
          <p class="heading scene-heading">SCENE: <span>{{ scene.getName() }}</span></p>
          <div class="arrow scene-arrow">
            <i class="fas fa-caret-left"></i>
          </div>
        </div>
        <div class="scene-content">
          {{ self.object_list(scene.getBackground(), scene.getObjects(), path, scene.getName()) }}
        </div>
      </div>
    {% endfor %}
  </div>
{% endmacro %}

{% block body %}

  <div id="codeview-wrapper" {% if not visible %} class="d-none" {% endif %}>
    {% if parsed_program is null %}
      <p>
        {{ "codeview.cantDisplayCode"|trans({}, "catroweb") }}
      </p>
    {% else %}
      {% if parsed_program.hasScenes() %}
        {% if parsed_program.scenes()|length > 1 %}
          {{ self.scenes(path, parsed_program.scenes()) }}
        {% else %}
          {{ self.object_list(parsed_program.scenes()[0].getBackground(),
            parsed_program.scenes()[0].getObjects(), path,
            parsed_program.scenes()[0].getName()) }}
        {% endif %}
      {% else %}
        {{ self.object_list(parsed_program.getBackground(), parsed_program.getObjects(), path, null) }}
      {% endif %}
    {% endif %}
  </div>

{% endblock %}
